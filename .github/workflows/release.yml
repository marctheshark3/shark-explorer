name: Release Management

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ".github/changelog-config.json"
          commitMode: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{steps.changelog.outputs.changelog}}
          draft: false
          prerelease: false
          files: |
            README.md
            docs/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API
        uses: docker/build-push-action@v4
        with:
          context: ./shark-api
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/shark-api:${{ steps.get_version.outputs.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/shark-api:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/shark-api:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/shark-api:buildcache,mode=max

      - name: Build and push Indexer
        uses: docker/build-push-action@v4
        with:
          context: ./shark-indexer
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/shark-indexer:${{ steps.get_version.outputs.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/shark-indexer:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/shark-indexer:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/shark-indexer:buildcache,mode=max

  notify:
    needs: [create-release, build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Notify on success
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "ðŸš€ New release v${{ steps.get_version.outputs.VERSION }} has been published!\n\nImages are available on Docker Hub:\n- shark-api:${{ steps.get_version.outputs.VERSION }}\n- shark-indexer:${{ steps.get_version.outputs.VERSION }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 